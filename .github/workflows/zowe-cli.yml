# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Zowe CLI CI

on:
  push:
    paths-ignore:
      - zowex/**
  pull_request:
    paths-ignore:
      - zowex/**
  workflow_dispatch:
    inputs:
      binary-type:
        description: Specify whether to use a `debug` or a `release` version of the binary
        default: debug
        required: false
      test-type:
        description: Specify whether to run tests using the `binary` or regular `nodejs` executable
        default: binary
        required: false
jobs:
  test:
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository) && !contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ${{ matrix.os }}
    outputs:
      npm-resolutions: ${{ steps.npm-update.outputs.result }}

    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x, 16.x, 18.x]
        os: [windows-latest, ubuntu-latest, macos-latest]

    env:
      OS: ${{ matrix.os }}
      NODE: ${{ matrix.node-version }}
      NODE_OPTIONS: --max_old_space_size=4096

    timeout-minutes: 60

    concurrency:
      group: ${{ matrix.os }}-node-${{ matrix.node-version }}-ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Disable Lint Annotations
      run: |
        echo "::remove-matcher owner=eslint-compact::"
        echo "::remove-matcher owner=eslint-stylish::"

    - name: Use NPM v8
      id: npm8
      run: npm install -g npm@~8.3.2

    - name: Install Dependencies
      id: install
      run: npm ci

    - name: Update Dependencies
      id: npm-update
      uses: zowe-actions/octorelease-script@master
      with:
        script: npmUpdate

    - name: Build Source
      id: build
      run: npm run build

    - name: Unit Tests
      if: ${{ always() && steps.build.outcome == 'success' }}
      run: npm run test:unit >> file.txt

    - name: Integration Tests
      if: ${{ always() && steps.build.outcome == 'success' }}
      run: npm run test:integration >> file.txt

    - name: Archive Results
      if: ${{ always() && steps.build.outcome == 'success' }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.node-version }}-results
        path: __tests__/__results__/

    - name: Upload Results to Codecov
      if: ${{ always() && steps.build.outcome == 'success' }}
      uses: codecov/codecov-action@v1.0.7
      with:
        env_vars: OS,NODE

  release:
    if: github.event_name == 'push' && github.ref_protected
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: false
        ref: ${{ github.ref }}

    - name: Use Node.js LTS
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'

    - name: Install Dependencies
      run: npm ci

    - name: Update Dependencies
      uses: zowe-actions/octorelease-script@master
      env:
        GIT_COMMITTER_NAME: ${{ secrets.ZOWE_ROBOT_USER }}
        GIT_COMMITTER_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
        NPM_RESOLUTIONS: ${{ needs.test.outputs.npm-resolutions }}
      with:
        script: npmUpdate

    - name: Build Source
      run: npm run build

    - uses: zowe-actions/octorelease@master
      env:
        GIT_COMMITTER_NAME: ${{ secrets.ZOWE_ROBOT_USER }}
        GIT_COMMITTER_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
        GIT_CREDENTIALS: x-access-token:${{ secrets.ZOWE_ROBOT_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
        NPM_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        NPM_EMAIL: ${{ secrets.ZOWE_ROBOT_EMAIL }}
